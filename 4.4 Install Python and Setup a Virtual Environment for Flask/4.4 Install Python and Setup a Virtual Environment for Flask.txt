-> flask installation & setup lesson  
   -> install python and set up a virtual environment for flask  

-> contents  
   -> introduction  
   -> install python  
   -> create a virtual environment  

-> introduction  
   -> to begin this course you need to ensure that python 3.6 or a higher version is installed on your machine  
   -> to verify if python is already installed and meets the version requirements open your terminal and run one of the following commands  
      -> `python3 --version`  
      -> or  
      -> `python --version`  
   -> if python is installed the version number displayed should be at least `3.6` you may see an output like  
      -> `python 3.6.15`  
   -> if your python version is below 3.6 or if python is not installed at all follow the instructions in the python 101 course which provides a detailed guide on installing python on your system  

-> install python  
   -> if python is already installed  
      -> as long as the version is 3.6 or higher you're good to go  
      -> to double-check the version use the command `python3 --version` or `python --version` again the output should indicate a version such as `python 3.6.15` or higher  
   -> if python is not installed or is an older version  
      -> if your system does not meet the python version requirement you must install or update python  
      -> follow the python 101 course's "how to install python" section to properly set up python on your machine ensure that you install a version of python that is 3.6 or higher  
      -> note the course assumes you have a basic understanding of programming it won't provide step-by-step instructions on how to install python but will guide you to resources to help if necessary if you encounter issues during installation feel free to ask for assistance on discord or any other course community platforms  

   -> important once python is installed test it by opening the python interpreter you should be able to run the command `python` or `python3` in the terminal and access an interactive python shell type `exit()` to exit the interpreter make sure the installed python version is at least `3.6`

-> create a virtual environment  
   -> a key part of this course is using virtual environments virtual environments allow you to isolate the dependencies for each project you work on ensuring that you don't run into issues with conflicting library versions across different projects  
   -> using a virtual environment ensures that your flask app will only use the dependencies installed within it rather than relying on globally installed packages which could cause version clashes and unwanted behaviour  
   -> now that you've confirmed python is installed you can create your virtual environment  

   -> steps to set up your virtual environment  
      -> first navigate to the folder where you want to store the course's project files you should have followed the previous steps and created a folder for this course  
      -> example of creating the project directory  
         -> `$ mkdir -p ~/documents/codingnomads/projects`  
         -> `$ cd ~/documents/codingnomads/projects`  
      -> inside the `projects` folder create a subfolder for your flask project if you've followed the folder structure guide in previous lessons it would look something like this  
         -> `$ mkdir flask-webdev`  
         -> `$ cd flask-webdev`  
      -> once you're inside the project folder create the virtual environment by running the following command  
         -> `$ python3 -m venv env`  
         -> this command uses python's built-in `venv` module to create a new virtual environment in the `env` folder within your project directory you can name the environment folder something else if you prefer but `env` is commonly used and easy to remember  
      -> after running the command python will create a number of files inside the `env` folder that represent the isolated environment you'll now have a clean space to install flask and any other dependencies that are specific to this project  

-> activating the virtual environment  
   -> to start working in your newly created virtual environment you must activate it  
   -> activating the virtual environment tells your terminal to use the specific versions of libraries and dependencies installed inside that environment when activated any python-related commands you run will use the packages and settings from within this environment rather than the global python environment on your system  

   -> activation process  
      -> for linux/macOS  
         -> run the following command to activate the virtual environment  
            -> `$ source env/bin/activate`  
      -> for windows  
         -> use this command to activate the environment  
            -> `$ .\env\scripts\activate`  
      -> once activated your terminal prompt should change and you'll see the name of your virtual environment (in this case `env`) in parentheses at the start of the line this indicates that the virtual environment is active and ready for use  
         -> `(env) your-computer-name:flask-webdev your-user-name$`  
      -> important every time you work on your flask project you need to activate the virtual environment first without activation your terminal will use global python settings instead of the ones in your virtual environment which can lead to errors and dependency issues  
      -> if you want to deactivate the environment later simply run the command  
         -> `$ deactivate`  
      -> this will return you to your global python environment  

-> what's next?  
   -> now that your virtual environment is set up and activated you're ready to start installing flask and other necessary dependencies for your project  
   -> the next step is to install flask inside the virtual environment this ensures that your flask application uses the correct version of the framework isolated from any global python packages  
   -> once flask is installed you can begin building your first flask app to continue proceed to the next lesson where you will learn how to install flask within your virtual environment and start coding your application
